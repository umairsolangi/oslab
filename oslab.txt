This is My Complete Notes till now of OS Lab Class:
Lab Task 01:
Init3
cd ~/Desktop
mkdir "Your Name"
touch "Your regno.txt"
mv "Your regno.txt" "Your Name/"
cp "Your Name/Your regno.txt" .
rm "Your regno.txt"
history

3rd Class
man mv
For Changing the Password:
passwd

cat /etc/passwd
which mv whereis
whoami
sudo get-apt update
sudo apt-get install apaceh2
sudo apt-get upgrade 
systemctl start apache2
service apache2 start
systemctl status apache2
sudo init 5 (To go to the desktop)
ip addr show


Class 04:
* how to add user
sudo adduser username
* how to see all user list
cat /etc/passwd
* how to jump to user we made
su username
* For changing the permission
chmode 764 abc.txt
* Give Permission to Folder
chmode 644 foldername


* i am sited on my window pc i will generate RSS key or DSA key from my pc 
* password auth off kr dety hain hai server pay
* we will also copy the key to the partner server so we both can connect without password.
* CronJobs
* Disaster Recovery
* SCP (secure Copy) rsyn for Recovery 
* how to view ip address view (ip addr show)
* Umair IP: 192.168.217.131
* Umair Copy IP: 192.168.217.138
* Now we will install ssh
* sudo apt-get install ssh
* sudo apt-get install ssh
* now we will connect from Main to Clone
* ssh username@cloneIP
* ssh umair@192.168.217.138
* we have been connected via Password now will do without password
* ssh-keygen -t rsa (rsa key has been generated)
* how to verify that key generated or not so command (cd /home/umair/.ssh/)
* now copy id from main machine to clone machine: ssh-copy-id umair@192.168.217.138
* now login using this command so it want ask you for password: (ssh umair@192.168.217.138)


Class 07:
cron jobs
SCP
RSYNC
we use to transfer dada remotly
Copy FIles Using SCP:
First Make Folder on Desktop then make 3 files into it then run below Command:
scp -r OSLAB umair@192.168.217.138:/home/umair/Desktop 

Copy FIles Using RSYNC:
First Make Folder on Desktop then make 3 files into it then run below Command:
rsync -rv OSLAB umair@192.168.217.138:/home/umair/Desktop

Bash Script:
Go Desktop 
nano program.sh 
it wil redirect to editro then type in editor
#!/bin/bash
a=34
b=36
c="Umair"
echo $a

now you need to out from the editor so Press Ctrl+o then enter then ctrl+x
you will redirect to Desktop now you need to give the run permissoin so type:
chmod +x program.sh
./program.sh

For User Input write:
read -p "Please Enter Your age" age
echo $age
To RUn Your Program:   ./program.sh

#!/bin/bash
a=33
b=34
c="Umair"
echo $a
echo $b
echo $c

read -p "Please enter your age"
echo $age

if [ $age -eq 18 ]
then
echo "YOu are"
elif [ $age -eq 18 ]
then 
echo "You are"
elif [ $age -eq 18 ]
then
echo "you are"
else
echo "YOu are"
fi

#doing loops
arr=(3 5 4 6 3 5)
for i in ${arr[@]}
do
echo $(($i*4))
done


This is my midterm paper:
Task 1: User and Group Management (6 marks)
Create a new user with the username "advanceduser."
Create a new group named "linuxmasters."
Add the "advanceduser" to the "linuxmasters" group.
Set a complex password for "advanceduser" that includes at least one uppercase letter, one lowercase letter, one digit, and one special character.

Task 2: Permissions and File Handling (8 marks)
Create a directory named "securedata" within the home directory of "advanceduser." Inside the "securedata" directory, create three files: "confidential.txt," "private.doc," and "topsecret.dat."
Set the permissions for these files as follows: "
confidential.txt": Owner can read and write, Group can read, Others have no access. "private.doc": Owner can read and write, Group can read and write, Others have no access.
"topsecret.dat": Owner can read and write, Group can read, Others can execute. Change the ownership of the "securedata" directory to "advanceduser" and "linuxmasters."

Task 3 BASH SCRIPTING (4 Marks):
Create a program using BASH Script to find factoial of a number. The number should be an input by the user and should be positive integer. If the user inputs a negative number an error message should be displayed.

Task 4: SSH Authentication (2 marks)
Configure SSH on your Linux system to allow remote login for the "advanceduser." Generate an SSH key pair for "advanceduser." Copy ssh key to second machine Attempt to SSH into the Linux system from another machine using the generated SSH key. Provide a screenshot or description of the successful SSH login. Use rsync command to store copy the output of history command stored in a file called yourname_regno.txt to your 2nd machine


i need you to give me solutions of my mid term paper by looking and getting an idea from my notes

Please write in English language.










Certainly, I can help you with the solutions based on your notes. Here are the solutions for your midterm paper:

**Task 1: User and Group Management (6 marks)**

```bash
# Create a new user with the username "advanceduser"
sudo adduser advanceduser

# Create a new group named "linuxmasters"
sudo groupadd linuxmasters

# Add "advanceduser" to the "linuxmasters" group
sudo usermod -aG linuxmasters advanceduser

# Set a complex password for "advanceduser"
sudo passwd advanceduser
```

**Task 2: Permissions and File Handling (8 marks)**

```bash
# Create a directory named "securedata" in advanceduser's home directory
mkdir /home/advanceduser/securedata

# Inside "securedata," create three files and set permissions
touch /home/advanceduser/securedata/confidential.txt
chmod 600 /home/advanceduser/securedata/confidential.txt

touch /home/advanceduser/securedata/private.doc
chmod 660 /home/advanceduser/securedata/private.doc

touch /home/advanceduser/securedata/topsecret.dat
chmod 644 /home/advanceduser/securedata/topsecret.dat

# Change ownership of "securedata" directory to advanceduser and linuxmasters group
sudo chown advanceduser:linuxmasters /home/advanceduser/securedata
```

**Task 3: BASH SCRIPTING (4 Marks)**

Create a BASH script (factorial.sh):

```bash
#!/bin/bash

read -p "Please enter a positive integer: " num

if [ $num -lt 0 ]; then
    echo "Error: Please enter a positive integer."
else
    factorial=1
    for ((i=1; i<=$num; i++)); do
        factorial=$((factorial * i))
    done
    echo "Factorial of $num is $factorial."
fi
```

Make the script executable and run it:

```bash
chmod +x factorial.sh
./factorial.sh
```

**Task 4: SSH Authentication (2 marks)**

1. Configure SSH on your Linux system to allow remote login for "advanceduser":
   - Edit sshd_config file: `sudo nano /etc/ssh/sshd_config`
   - Set `PasswordAuthentication no` to disable password authentication.
   - Restart SSH service: `sudo service ssh restart`

2. Generate an SSH key pair for "advanceduser":
   ```bash
   ssh-keygen -t rsa
   ```

3. Copy the SSH public key to the second machine:
   ```bash
   ssh-copy-id advanceduser@second_machine_IP
   ```

4. Attempt to SSH into the Linux system from another machine using the generated SSH key.

5. Use rsync to copy the output of the history command stored in a file called yourname_regno.txt to your 2nd machine:
   ```bash
   history > yourname_regno.txt
   rsync -avz yourname_regno.txt advanceduser@second_machine_IP:/path/to/destination
   ```

Please adjust the commands and paths according to your specific setup and requirements. Make sure to replace "second_machine_IP" with the actual IP address of your second machine.